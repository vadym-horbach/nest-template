version: '3.5'

networks:
  nest_dev:
    driver: bridge
services:
  ##########################
  ### SETUP BACKEND CONTAINER
  ##########################
  server:
    command: npm run start:debug
    container_name: nest_dev_server
    build:
      dockerfile: Dockerfile
      context: .
      target: builder
    restart: unless-stopped
    environment:
      - NODE_PORT=${NODE_PORT:-5000}
    volumes:
      - .:/opt/node_app
      - node_modules_files:/opt/node_app/node_modules/
      - .docker/data/tmp:/tmp
    ports:
      - ${NODE_PORT:-5000}:${NODE_PORT:-5000}
      - ${DEBUG_FORWARD_PORT:-9229}:9229
    depends_on:
      - postgres
      - redis
    networks:
      - nest_dev
  ##########################
  ### SETUP DB CONTAINER
  ##########################
  postgres:
    image: postgres:14.3-alpine
    restart: unless-stopped
    container_name: nest_dev_postgres
    command: postgres -c config_file=/etc/postgresql.conf
    ports:
      - ${DB_FORWARD_PORT:-5432}:5432
    env_file:
      - .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./.docker/postgres/data:/var/lib/postgresql/data
      - ./.docker/postgres/postgresql.conf:/etc/postgresql.conf
      - ./.docker/postgres/initdb.d:/docker-entrypoint-initdb.d
    shm_size: 256m
    networks:
      - nest_dev
  ##########################
  ### SETUP REDIS CONTAINER
  ##########################
  redis:
    image: redis:7.0.7-alpine
    container_name: nest_dev_redis
    command: redis-server --save 20 1 --loglevel warning --port ${REDIS_PORT:-6379} --requirepass ${REDIS_PASSWORD}
    restart: unless-stopped
    ports:
      - ${REDIS_FORWARD_PORT:-6379}:${REDIS_PORT:-6379}
    volumes:
      - redis_data:/data
    networks:
      - nest_dev
volumes:
  node_modules_files:
    driver: local
  redis_data:
    driver: local
